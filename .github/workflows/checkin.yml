name: "iKuuu自动签到"

on:
  schedule:
    - cron: "0 22 * * *"  # UTC时间22:00（北京时间06:00）
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  checkin:
    name: 🛫 执行签到任务
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read

    steps:
      - name: ⬇️ 检出代码
        uses: actions/checkout@v4

      - name: 🐍 配置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'

      - name: 📦 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🚀 执行核心任务
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWD: ${{ secrets.PASSWD }}
          SCKEY: ${{ secrets.SCKEY }}
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          echo "===== 任务启动 [$(date '+%m-%d %H:%M:%S')] ====="
          python3 main.py
          echo "===== 任务结束 [$(date '+%m-%d %H:%M:%S')] ====="

      - name: 📢 错误通知
        if: failure()
        env:
          SCKEY: ${{ secrets.SCKEY }}
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          # 发送错误通知
          timestamp=$(date '+%Y-%m-%d %H:%M:%S')
          status="失败"
          title="❌ 任务执行失败"
          content="**任务执行结果通知**\n\n- 执行时间：$timestamp\n- 执行状态：$status"
          # URL 编码处理
          encoded_content=$(python -c "import urllib.parse; print(urllib.parse.quote('$content'))")
          # Server酱通知
          if [ -n "$SCKEY" ] && [ "$SCKEY" != "1" ]; then
            curl -X POST "https://sctapi.ftqq.com/${SCKEY}.send?title=${title}&desp=${encoded_content}"
          fi
          # PushPlus通知
          if [ -n "$TOKEN" ] && [ "$TOKEN" != "1" ]; then
            curl -X POST -H "Content-Type: application/json" -d "{\"token\": \"$TOKEN\", \"title\": \"iKuuu任务执行通知\", \"content\": \"$content\", \"template\": \"markdown\"}" "http://www.pushplus.plus/send"
          fi
